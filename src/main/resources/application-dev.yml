
server:
  port: 8800
management:
  endpoints:
    web:
      exposure:
        include: "*"
  server:
    port: 8801
logging:
  config: classpath:logback.xml
spring:
  datasource:
      url: jdbc:log4jdbc:mysql://47.106.65.56:3307/eartech?useSSL=false&useUnicode=true&characterEncoding=UTF-8
      #url: jdbc:mysql://47.106.65.56:3307/eartech?useSSL=false&useUnicode=true&characterEncoding=UTF-8
      username: root
      password: abAB@123
      driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
      #driver-class-name: com.mysql.jdbc.Driver
      platform: mysql
      type: com.alibaba.druid.pool.DruidDataSource
      # 下面为连接池的补充设置，应用到上面所有数据源中
      # 初始化大小，最小，最大
      initialSize: 5
      minIdle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 30000
      #validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      #useGlobalDataSourceStat: true
      # druid 监控页面
      #      stat-view-servlet:
      #        enabled: true
      #        url-pattern: /druid/*
      #        reset-enable: false
      #        login-username: root
      #        login-password: root
      # 状态监控
      filter:
          stat:
          enabled: true
          db-type: mysql
          log-slow-sql: true
          slow-sql-millis: 2000
          # 监控过滤器
      web-stat-filter:
          enabled: true
          exclusions:
              - "*.js"
              - "*.gif"
              - "*.jpg"
              - "*.png"
              - "*.css"
              - "*.ico"
              - "/druid/*"
  redis:
    host: 47.106.180.137
    port: 6379
    password:
    database: 0
  data:
    mongodb:
      uri: mongodb://47.106.180.137:27017/eartech
  devtools:
      restart:
        enabled: true  #设置开启热部署
        additional-paths: src/main/java #重启目录
   #页面不加载缓存，修改即时生效
      freemarker:
        cache: false
  security:
    user:
      password: 123456
  aop:
    proxy-target-class: true
#mybatis-plus配置
mybatis-plus:
    # xml地址
    mapper-locations: classpath:mapper/*Mapper.xml
    # 实体扫描，多个package用逗号或者分号分隔
    type-aliases-package: cn.eartech.framework.entity   #自己的实体类地址
    # 枚举扫描
    typeEnumsPackage: cn.eartech.framework.enum
    global-config:
      db-config:
        #主键策略
        id-type: uuid
        #字段策略
        field-strategy: not_empty
        #驼峰下划线转换
        column-underline: true
        #下划线转换
        capital-mode: true
        refresh-mapper: true
    configuration:
      # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
#      log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
      #开启驼峰命名法
      map-underscore-to-camel-case: true
      cache-enabled: false
#log4j2  配置
log4jdbc:
    spylogdelegator:
        name: net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator
#开发及测试环境配置文件dev
application:
  authentication:
    key: EartechDEV
  jwt-blacklist:
    life-time-hour: 24
    set-name: AUTHORIZATION_HEADER_BLACKLIST
  failed-login:
    max-times-per-date: 10
  need-re-login-days: 14
  default-service-staff-id: 00000000000000000000000000000002
  default-password: 123456
  role-name:
   boss: BOSS
   admin-user: ADMIN_USER
   patient: PATIENT
   relative: RELATIVE
   service-staff: SERVICE_STAFF
   doctor: DOCTOR
  avatar:
    output-format: png
    output-width: 200
    output-height: 200
  captcha:
    prefix: CAPTCHA_
    life-time-minute: 5
  sms-verification-code:
    life-time-minute: 5
    access-key-id: LTAIVHALNdn3obH3
    access-key-secret: EnEtA8JJzjf73rIite1iwzyHFv0lLb
    sign-name: 智听科技
    login-prefix: SMS_LOGIN_VERIFICATION_CODE_
    login-template-code: SMS_145525098
    login-template-param: "{\"code\":\"{0}\"}"
    register-prefix: SMS_REGISTER_VERIFICATION_CODE_
    register-template-code: SMS_145525096
    register-template-param: "{\"code\":\"{0}\"}"
    reset-password-prefix: SMS_RESET_PASSWORD_CODE_
    reset-password-template-code: SMS_145525096
    reset-password-template-param: "{\"code\":\"{0}\"}"
    bind-cell-phone-no-prefix: SMS_BIND_CELLPHONE_NO_CODE_
    bind-cell-phone-no-template-code: SMS_145525094
    bind-cell-phone-no-template-param: "{\"code\":\"{0}\"}"
  we-chat-mp:
    app-id:
    secret:
    token:
    aes-key:
  base-url: http://api.eartech.cn
  baidu-yun-push:
    api-key:
    secret-key:
